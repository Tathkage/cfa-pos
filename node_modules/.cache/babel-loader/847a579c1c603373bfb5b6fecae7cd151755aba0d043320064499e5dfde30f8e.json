{"ast":null,"code":"import{disableButtons,enableButtons}from'./buttonToggle.js';import'../menuOrdering.js';import React from'react';import ReactDOM from'react-dom';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var isPoppedUp=false;/**\r\n * rows holds all of the modifications for the menu item that is currently loaded.\r\n */var rows=[];//holds all of the data pertaining to counting how many modifications are made. this has a one to one correlation with rows.\nvar count_mods=[];//used to track original state of count_mods, true if count_mods[i] == 1, false if count_mods[i] == 0\nvar startAsOneCheckers=[];/**\r\n * MyComponent is a function that auto-generates div's based on the item.customs object property in the productsAndIngredients.js.\r\n * For example, if I had three items in custom, the function would auto-generate 3 divs with buttons.\r\n */export var MyComponent=function MyComponent(){var divElements=[];// this function populates the menu item with all of the proper modifications\n// the plus and minus buttons need functionality\nvar count=0;for(var i=0;i<rows.length;i++){divElements.push(/*#__PURE__*/_jsxs(\"div\",{className:\"h-24 grid grid-cols-4 gap-3 content-start  ...\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600 px-4 py-2 mt-4 mr-1 rounded\",children:[\" \",rows[i],\" \"]}),\" \"]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{id:\"plusMod\",className:\"bg-green-500 text-white px-4 py-2 mt-4 mr-1 rounded\",children:\"+\"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"counter\",className:\"bg-blue-500 w-8 h-9 text-white px-2.5 py-2 mt-4 mr-1 rounded\",children:[\" \",count_mods[i],\" \"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(\"button\",{id:\"minusMod\",className:\"bg-red-500 text-white px-4 py-2 mt-4 mr-1 rounded\",children:\"-\"})]})]}));}return/*#__PURE__*/_jsx(\"div\",{className:\"overflow-y-scroll h-64\",children:divElements});};/**\r\n * If an item is clicked, this handler is called in order to make sure that a few things can happen.\r\n * The first thing is that the item properly needs to load, which is why item is a parameter in our function.\r\n * The next thing it needs to achieve is make sure that the modifications are loading properly,\r\n * and that buttons with listeners are also being assigned and removed when needed.\r\n * @param item\r\n * @param handleCartItems\r\n */export var confirmItemPopUp=function confirmItemPopUp(item,handleCartItems){if(!isPoppedUp){// Only allow addPopup buttons to be clicked\ndisableButtons();/////////////\n// Pop Ups //\n/////////////\n// Add item to order pop up\n/**\r\n         * This const is used as a generic template to load the products when the button is pressed.\r\n         * @type {string}\r\n         */var addToOrderPopup=\"\\n            <h2 class=\\\"mb-4 font-bold text-lg\\\">\".concat(item.name,\"</h2>\\n            <img src=\\\"\").concat(require(\"../../\".concat(item.image)),\"\\\" alt=\\\"\").concat(item.name,\"\\\" class=\\\"w-64 h-64 mb-4\\\">\\n            <p class=\\\"text-gray-600\\\">Price: $\").concat(item.price,\"</p>\\n            <button id=\\\"customizeBtn\\\" class=\\\"bg-blue-500 text-white px-4 py-2 mt-4 mr-4 rounded\\\">Customize Ingredients</button>\\n            <input type=\\\"number\\\" id=\\\"quantityInput\\\" class=\\\"border border-gray-400 px-4 py-2 mt-4 mr-4 rounded\\\" min=\\\"1\\\" max=\\\"10\\\" value=\\\"1\\\">\\n            <button id=\\\"addToOrderBtn\\\" class=\\\"bg-green-500 text-white px-4 py-2 mt-4 mr-4 rounded\\\">Add to Your Order</button>\\n            <button id=\\\"cancelBtn\\\" class=\\\"bg-red-500 text-white px-4 py-2 mt-4 absolute top-0 right-0 mr-4 mt-4 rounded\\\">Cancel</button>\\n        \");//turn this into a function!\n// Customize item pop up\n/**\r\n         * This const is used as a templated for the modifications needed for loading the proper data.\r\n         * @type {string}\r\n         */var customizeIngredientsPopup=\"\\n            <h2 class=\\\"mb-4 font-bold text-lg\\\">\".concat(item.name,\"</h2>\\n            <img src=\\\"\").concat(require(\"../../\".concat(item.image)),\"\\\" alt=\\\"\").concat(item.name,\"\\\" class=\\\"w-64 h-64 mb-4\\\">\\n  \\n                <div id=\\\"my-component-container\\\"></div>\\n\\n                \\n            <p class=\\\"text-gray-600\\\">Price: $\").concat(item.price,\"</p>              \\n                    \\n            <button id=\\\"cancelCustomizeBtn\\\" class=\\\"bg-red-500 text-white px-4 py-2 mt-4 mr-4 rounded\\\">Cancel Changes</button>\\n            <button id=\\\"customizeItem\\\" class=\\\"bg-green-500 text-white px-4 py-2 mt-4 mr-4 rounded\\\">Save Changes</button>\\n        \");// Create addPopup\nvar addPopup=document.createElement(\"div\");addPopup.className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white p-8 rounded-md z-50\";//addPopup.insertAdjacentHTML();\naddPopup.innerHTML=addToOrderPopup;// Create customizePopup\nvar customizePopup=document.createElement(\"div\");customizePopup.className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white p-8 rounded-md z-50\";customizePopup.innerHTML=customizeIngredientsPopup;// Allow dimming of non-addPopup elements\nvar dimElement=document.createElement(\"div\");dimElement.classList.add(\"fixed\",\"inset-0\",\"bg-black\",\"opacity-50\",\"z-40\");// Dim non-addPopup elements and add addPopup\ndocument.body.appendChild(dimElement);document.body.appendChild(addPopup);isPoppedUp=true;//////////////////////\n// Pop up buttons //\n//////////////////////\n// Add \"Cancel\" button to close pop-up\nvar cancelItemButton=document.getElementById(\"cancelBtn\");var addToOrderBtn=document.getElementById(\"addToOrderBtn\");var customizeBtn=document.getElementById(\"customizeBtn\");// Define the event handler function for \"Cancel\" button\n/**\r\n         * This button is used to handle when a button in cancelled and terminating the correct listeners,\r\n         * and adding new listeners when needed.\r\n         */var handleCancelClick=function handleCancelClick(){item.modifications=[{type:'+',changes:[]},{type:'-',changes:[]}];// Close the addPopup\ndocument.body.removeChild(addPopup);document.body.removeChild(dimElement);isPoppedUp=false;// Enable all buttons outside the addPopup\nenableButtons();// Remove the event listener after it's been triggered\ncancelItemButton.removeEventListener(\"click\",handleCancelClick);while(rows.length>0){rows.pop();}while(count_mods.length>0){count_mods.pop();startAsOneCheckers.pop();console.log(\"poppin\");}rows.length=0;count_mods.length=0;startAsOneCheckers.length=0;};/**\r\n         * This button is used to handle when a button in cancelled and terminating the correct listeners,\r\n         * and adding new listeners when needed.\r\n         */ // Define the event handler function for \"Add to Order\" button\nvar handleAddToOrderClick=function handleAddToOrderClick(){// Handle add to order functionality with quantity\nvar quantityInput=document.getElementById(\"quantityInput\");// Update the item object with the quantity\nitem.quantity=parseInt(quantityInput.value);handleCartItems(item);// Close the addPopup\ndocument.body.removeChild(addPopup);document.body.removeChild(dimElement);isPoppedUp=false;// Enable all buttons outside the addPopup\nenableButtons();// Remove the event listener after it's been triggered\naddToOrderBtn.removeEventListener(\"click\",handleAddToOrderClick);while(rows.length>0){rows.pop();}while(count_mods.length>0){count_mods.pop();}item.modifications=[{type:'+',changes:[]},{type:'-',changes:[]}];};/**\r\n         * This button is used to handle when a button in cancelled and terminating the correct listeners,\r\n         * and adding new listeners when needed.\r\n         */ // Define the event handler function for \"Customize\" button\nvar handleCustomizeClick=function handleCustomizeClick(){for(var i=0;i<item.custom.length+1;i++){// if an ingredient is in custom, this will be made true.\n// if an ingredient starts at 1 for a default then\n// this will be made true\n//\n//let startAsDefault = false;\nfor(var j=0;j<item.ingredients.length;j++){if(item.custom[j]===item.ingredients[i]){count_mods[j]=1;//startAsDefault = true;\nconsole.log(\"rows[j] = \"+item.ingredients[j]);//startAsOneCheckers.push(true);\nstartAsOneCheckers[j]=true;//item.modifications.find(mod => mod.type === '+').changes.push(item.ingredients[j]);\n//break;\n}}//startAsOneCheckers.push(false);\nrows.push(item.custom[i]);//we start all modifications at zero, if .\ncount_mods[i]=0;startAsOneCheckers[i]=false;}count_mods.pop();rows.pop();startAsOneCheckers.pop();console.log(count_mods);console.log(startAsOneCheckers);//startAsOneCheckers.pop()\ndocument.body.removeChild(addPopup);document.body.appendChild(customizePopup);//this render component autogenerated the modifications div elements everytime the handle customize is clicked\nReactDOM.render(/*#__PURE__*/_jsx(MyComponent,{}),document.getElementById('my-component-container'));//minimize these functions on the left :0 --> handlePlusMod, --> handleMinusMod\nvar handlePlusMod=function handlePlusMod(num){//code is very convoluted, sorry in advance but im scared of touching anything because it could break :D\n//message me if you need an explanation on the code!!!\n//handleMinusMod is much easier to go through, I would recommend going through there if contacting me isn't time efficient\nreturn function(){var toMod;toMod=rows[num];console.log(\"plus: \"+toMod);//i track count_mods[num] to make sure it goes from 0 - 2 range.\nif(count_mods[num]<2&&count_mods[num]>=0){count_mods[num]=count_mods[num]+1;if(count_mods[num]>2){count_mods[num]=2;return;}//if we start at 1 (ie: a default ingredient), like pickles on a chicken sandwich\n//some of this code might not even be used tbh im scared to touch it tbh\nif(startAsOneCheckers[num]===true){if(count_mods[num]===1){console.log(\"countnums (plus): \"+count_mods[num]);console.log(\"rows (plus): \"+rows[num]);//item.modifications.find(mod => mod.type === '-').changes.pop();\nvar index=item.modifications.find(function(mod){return mod.type==='-';}).changes.indexOf(rows[num]);console.log(\"Index (plus): \"+index);if(index!==-1){item.modifications.find(function(mod){return mod.type==='-';}).changes.splice(index,1);}}if(count_mods[num]===2){item.modifications.find(function(mod){return mod.type==='+';}).changes.push(toMod);}if(count_mods[num]===0){item.modifications.find(function(mod){return mod.type==='+';}).changes.push(toMod);}}//if we start at 0, ie: ingredients you can add on, but are not default on the item, like tomatoes on a chicken sandwich\n//ditto above statement D:\nelse if(startAsOneCheckers[num]===false){if(count_mods[num]===1){//item.modifications.find(mod => mod.type === '-').changes.pop();\nvar _index=item.modifications.find(function(mod){return mod.type==='-';}).changes.indexOf(rows[num]);if(_index!==-1){item.modifications.find(function(mod){return mod.type==='-';}).changes.splice(_index,1);console.log(\"test plus 1\");}item.modifications.find(function(mod){return mod.type==='+';}).changes.push(toMod);}if(count_mods[num]===2){item.modifications.find(function(mod){return mod.type==='+';}).changes.push(toMod);}if(count_mods[num]===0){item.modifications.find(function(mod){return mod.type==='+';}).changes.push(toMod);}console.log(count_mods[num]);}ReactDOM.render(/*#__PURE__*/_jsx(MyComponent,{}),document.getElementById('my-component-container'));console.log(item.modifications.filter(function(mod){return mod.type==='+';}));}};};var handleMinusMod=function handleMinusMod(num){return function(){var toMod;toMod=rows[num];//same logic as plus, but flipped logic,\n// this code is much more concise and easier to read through if you're just trying to get a basic understanding\n// of my modification logic\nif(count_mods[num]<=2&&count_mods[num]>=0){count_mods[num]=count_mods[num]-1;if(count_mods[num]<0){count_mods[num]=0;return;}if(item.modifications){var plusMod=item.modifications.find(function(mod){return mod.type==='+';});if(plusMod){//console.log(\"count_mod[num]: \" + count_mods[num]);\nconsole.log(\"rows[num]: \"+rows[num]);if(startAsOneCheckers[num]===true){if(count_mods[num]===0){console.log(\"minus === 0\");var index=item.modifications.find(function(mod){return mod.type==='+';}).changes.indexOf(rows[num]);//item.modifications.find(mod => mod.type === '+').changes.pop();\nconsole.log(\"Index (minus) :\"+index);if(index!==-1){console.log(\"index: \"+index);item.modifications.find(function(mod){return mod.type==='+';}).changes.splice(index,1);}item.modifications.find(function(mod){return mod.type==='-';}).changes.push(toMod);}if(count_mods[num]===1){/*while( item.modifications.find(mod => mod.type === '+').changes.length > 0){\r\n                                            item.modifications.find(mod => mod.type === '+').changes.pop();\r\n                                        }*/var _index2=item.modifications.find(function(mod){return mod.type==='+';}).changes.indexOf(rows[num]);if(_index2!==-1){item.modifications.find(function(mod){return mod.type==='+';}).changes.splice(_index2,1);}}if(count_mods[num]===2){//item.modifications.find(mod => mod.type === '+').changes.pop();\nvar _index3=item.modifications.find(function(mod){return mod.type==='+';}).changes.indexOf(rows[num]);if(_index3!==-1){item.modifications.find(function(mod){return mod.type==='+';}).changes.splice(_index3,1);}}}//console.log(\"start as checker test: \" + startAsOneCheckers[num])\nif(startAsOneCheckers[num]===false){if(count_mods[num]===0){//console.log(\"test 0 case again..\")\nvar _index4=item.modifications.find(function(mod){return mod.type==='+';}).changes.indexOf(rows[num]);if(_index4!==-1){item.modifications.find(function(mod){return mod.type==='+';}).changes.splice(_index4,1);}//item.modifications.find(mod => mod.type === '+').changes.pop();\n//item.modifications.find(mod => mod.type === '-').changes.push(toMod);\n}if(count_mods[num]===1){//console.log(\"test 1 case again..\")\n//console.log(\"minus: \" + toMod);\nvar _index5=item.modifications.find(function(mod){return mod.type==='+';}).changes.indexOf(rows[num]);if(_index5!==-1){item.modifications.find(function(mod){return mod.type==='+';}).changes.splice(_index5,1);}}}}}ReactDOM.render(/*#__PURE__*/_jsx(MyComponent,{}),document.getElementById('my-component-container'));}};};var displayCountModNumbers=document.getElementsByClassName(\"bg-blue-500 w-8 h-9 text-white px-2.5 py-2 mt-4 mr-1 rounded\");var plusMods=document.getElementsByClassName(\"bg-green-500 text-white px-4 py-2 mt-4 mr-1 rounded\");var minusMods=document.getElementsByClassName(\"bg-red-500 text-white px-4 py-2 mt-4 mr-1 rounded\");for(var _i=0;_i<plusMods.length;_i++){plusMods[_i].addEventListener(\"click\",handlePlusMod(_i));}for(var _i2=0;_i2<displayCountModNumbers.length;_i2++){minusMods[_i2].addEventListener(\"click\",handleMinusMod(_i2));}var saveCustomizeButton=document.getElementById(\"customizeItem\");//Define the event handler function for \"Cancel\" button in customizePopup\nvar handleSaveCustomizeClick=function handleSaveCustomizeClick(){document.body.removeChild(customizePopup);document.body.appendChild(addPopup);// Remove the event listener after it's been triggered\nsaveCustomizeButton.removeEventListener(\"click\",handleSaveCustomizeClick);cancelCustomizeButton.removeEventListener(\"click\",handleCancelCustomizeClick);//console.log(item.modifications.find(mod => mod.type === '+').toString());\n//item.modifications = [{type: '+', changes: []}, {type: '-', changes: []}];\nrows.length=0;count_mods.length=0;};var cancelCustomizeButton=document.getElementById(\"cancelCustomizeBtn\");var handleCancelCustomizeClick=function handleCancelCustomizeClick(){document.body.removeChild(customizePopup);document.body.appendChild(addPopup);while(rows.length>0){rows.pop();}while(count_mods.length>0){count_mods.pop();startAsOneCheckers.pop();console.log(\"poppin\");}// Remove the event listener after it's been triggered\ncancelCustomizeButton.removeEventListener(\"click\",handleCancelCustomizeClick);saveCustomizeButton.removeEventListener(\"click\",handleSaveCustomizeClick);};saveCustomizeButton.addEventListener(\"click\",handleSaveCustomizeClick);cancelCustomizeButton.addEventListener(\"click\",handleCancelCustomizeClick);};// Attach event listeners to buttons\ncancelItemButton.addEventListener(\"click\",handleCancelClick);addToOrderBtn.addEventListener(\"click\",handleAddToOrderClick);customizeBtn.addEventListener(\"click\",handleCustomizeClick);//item.modifications = [{type: '+', changes: []}, {type: '-', changes: []}];\n}};","map":{"version":3,"names":["disableButtons","enableButtons","React","ReactDOM","jsxs","_jsxs","jsx","_jsx","isPoppedUp","rows","count_mods","startAsOneCheckers","MyComponent","divElements","count","i","length","push","className","children","id","confirmItemPopUp","item","handleCartItems","addToOrderPopup","concat","name","require","image","price","customizeIngredientsPopup","addPopup","document","createElement","innerHTML","customizePopup","dimElement","classList","add","body","appendChild","cancelItemButton","getElementById","addToOrderBtn","customizeBtn","handleCancelClick","modifications","type","changes","removeChild","removeEventListener","pop","console","log","handleAddToOrderClick","quantityInput","quantity","parseInt","value","handleCustomizeClick","custom","j","ingredients","render","handlePlusMod","num","toMod","index","find","mod","indexOf","splice","filter","handleMinusMod","plusMod","displayCountModNumbers","getElementsByClassName","plusMods","minusMods","addEventListener","saveCustomizeButton","handleSaveCustomizeClick","cancelCustomizeButton","handleCancelCustomizeClick"],"sources":["C:/Programming/TAMU/CSCE 331/cfa-pos/src/customer_pages/popups/confirmItem.js"],"sourcesContent":["import {disableButtons, enableButtons} from './buttonToggle.js';\r\nimport '../menuOrdering.js';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nlet isPoppedUp = false;\r\n\r\n\r\n/**\r\n * rows holds all of the modifications for the menu item that is currently loaded.\r\n */\r\nconst rows = [];\r\n\r\n//holds all of the data pertaining to counting how many modifications are made. this has a one to one correlation with rows.\r\nconst count_mods = [];\r\n\r\n//used to track original state of count_mods, true if count_mods[i] == 1, false if count_mods[i] == 0\r\nconst startAsOneCheckers = [];\r\n\r\n/**\r\n * MyComponent is a function that auto-generates div's based on the item.customs object property in the productsAndIngredients.js.\r\n * For example, if I had three items in custom, the function would auto-generate 3 divs with buttons.\r\n */\r\n\r\nexport const MyComponent = function() {\r\n    const divElements = [];\r\n    // this function populates the menu item with all of the proper modifications\r\n    // the plus and minus buttons need functionality\r\n    let count = 0;\r\n    for (let i = 0; i < rows.length; i++) {\r\n        divElements.push(\r\n            <div className=\"h-24 grid grid-cols-4 gap-3 content-start  ...\">\r\n                <div><p className=\"text-gray-600 px-4 py-2 mt-4 mr-1 rounded\"> {rows[i]} </p> </div>\r\n                <div><button id=\"plusMod\" className=\"bg-green-500 text-white px-4 py-2 mt-4 mr-1 rounded\">+</button></div>\r\n                <div id={\"counter\"} className=\"bg-blue-500 w-8 h-9 text-white px-2.5 py-2 mt-4 mr-1 rounded\"> {count_mods[i]} </div>\r\n                <div> <button id=\"minusMod\" className=\"bg-red-500 text-white px-4 py-2 mt-4 mr-1 rounded\">-</button></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <div className = \"overflow-y-scroll h-64\">{divElements}</div>;\r\n}\r\n/**\r\n * If an item is clicked, this handler is called in order to make sure that a few things can happen.\r\n * The first thing is that the item properly needs to load, which is why item is a parameter in our function.\r\n * The next thing it needs to achieve is make sure that the modifications are loading properly,\r\n * and that buttons with listeners are also being assigned and removed when needed.\r\n * @param item\r\n * @param handleCartItems\r\n */\r\nexport const confirmItemPopUp = (item, handleCartItems) => {\r\n\r\n    if (!isPoppedUp) {\r\n\r\n        // Only allow addPopup buttons to be clicked\r\n        disableButtons();\r\n\r\n        /////////////\r\n        // Pop Ups //\r\n        /////////////\r\n\r\n        // Add item to order pop up\r\n        /**\r\n         * This const is used as a generic template to load the products when the button is pressed.\r\n         * @type {string}\r\n         */\r\n        const addToOrderPopup = `\r\n            <h2 class=\"mb-4 font-bold text-lg\">${item.name}</h2>\r\n            <img src=\"${require(`../../${item.image}`)}\" alt=\"${item.name}\" class=\"w-64 h-64 mb-4\">\r\n            <p class=\"text-gray-600\">Price: $${item.price}</p>\r\n            <button id=\"customizeBtn\" class=\"bg-blue-500 text-white px-4 py-2 mt-4 mr-4 rounded\">Customize Ingredients</button>\r\n            <input type=\"number\" id=\"quantityInput\" class=\"border border-gray-400 px-4 py-2 mt-4 mr-4 rounded\" min=\"1\" max=\"10\" value=\"1\">\r\n            <button id=\"addToOrderBtn\" class=\"bg-green-500 text-white px-4 py-2 mt-4 mr-4 rounded\">Add to Your Order</button>\r\n            <button id=\"cancelBtn\" class=\"bg-red-500 text-white px-4 py-2 mt-4 absolute top-0 right-0 mr-4 mt-4 rounded\">Cancel</button>\r\n        `;\r\n        //turn this into a function!\r\n\r\n\r\n        // Customize item pop up\r\n        /**\r\n         * This const is used as a templated for the modifications needed for loading the proper data.\r\n         * @type {string}\r\n         */\r\n        const customizeIngredientsPopup = `\r\n            <h2 class=\"mb-4 font-bold text-lg\">${item.name}</h2>\r\n            <img src=\"${require(`../../${item.image}`)}\" alt=\"${item.name}\" class=\"w-64 h-64 mb-4\">\r\n  \r\n                <div id=\"my-component-container\"></div>\r\n\r\n                \r\n            <p class=\"text-gray-600\">Price: $${item.price}</p>              \r\n                    \r\n            <button id=\"cancelCustomizeBtn\" class=\"bg-red-500 text-white px-4 py-2 mt-4 mr-4 rounded\">Cancel Changes</button>\r\n            <button id=\"customizeItem\" class=\"bg-green-500 text-white px-4 py-2 mt-4 mr-4 rounded\">Save Changes</button>\r\n        `;\r\n\r\n        // Create addPopup\r\n        const addPopup = document.createElement(\"div\");\r\n        addPopup.className = \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white p-8 rounded-md z-50\";\r\n        //addPopup.insertAdjacentHTML();\r\n        addPopup.innerHTML = addToOrderPopup;\r\n\r\n        // Create customizePopup\r\n        const customizePopup = document.createElement(\"div\");\r\n        customizePopup.className = \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white p-8 rounded-md z-50\";\r\n        customizePopup.innerHTML = customizeIngredientsPopup;\r\n\r\n        // Allow dimming of non-addPopup elements\r\n        const dimElement = document.createElement(\"div\");\r\n        dimElement.classList.add(\"fixed\", \"inset-0\", \"bg-black\", \"opacity-50\", \"z-40\");\r\n\r\n        // Dim non-addPopup elements and add addPopup\r\n        document.body.appendChild(dimElement);\r\n        document.body.appendChild(addPopup);\r\n\r\n        isPoppedUp = true;\r\n\r\n        //////////////////////\r\n        // Pop up buttons //\r\n        //////////////////////\r\n\r\n        // Add \"Cancel\" button to close pop-up\r\n        const cancelItemButton = document.getElementById(\"cancelBtn\");\r\n        const addToOrderBtn = document.getElementById(\"addToOrderBtn\");\r\n        const customizeBtn = document.getElementById(\"customizeBtn\");\r\n\r\n\r\n        // Define the event handler function for \"Cancel\" button\r\n        /**\r\n         * This button is used to handle when a button in cancelled and terminating the correct listeners,\r\n         * and adding new listeners when needed.\r\n         */\r\n        const handleCancelClick = function() {\r\n\r\n            item.modifications = [{type: '+', changes: []}, {type: '-', changes: []}];\r\n\r\n            // Close the addPopup\r\n            document.body.removeChild(addPopup);\r\n            document.body.removeChild(dimElement);\r\n            isPoppedUp = false;\r\n\r\n            // Enable all buttons outside the addPopup\r\n            enableButtons();\r\n\r\n            // Remove the event listener after it's been triggered\r\n            cancelItemButton.removeEventListener(\"click\", handleCancelClick);\r\n\r\n            while(rows.length > 0) {\r\n                rows.pop();\r\n            }\r\n            while(count_mods.length > 0){\r\n                count_mods.pop();\r\n                startAsOneCheckers.pop()\r\n                console.log(\"poppin\")\r\n            }\r\n\r\n            rows.length = 0;\r\n            count_mods.length = 0;\r\n            startAsOneCheckers.length = 0;\r\n\r\n        };\r\n        /**\r\n         * This button is used to handle when a button in cancelled and terminating the correct listeners,\r\n         * and adding new listeners when needed.\r\n         */\r\n        // Define the event handler function for \"Add to Order\" button\r\n        const handleAddToOrderClick = function() {\r\n            // Handle add to order functionality with quantity\r\n            const quantityInput = document.getElementById(\"quantityInput\");\r\n            // Update the item object with the quantity\r\n            item.quantity = parseInt(quantityInput.value);\r\n            handleCartItems(item);\r\n\r\n            // Close the addPopup\r\n            document.body.removeChild(addPopup);\r\n            document.body.removeChild(dimElement);\r\n            isPoppedUp = false;\r\n\r\n            // Enable all buttons outside the addPopup\r\n            enableButtons();\r\n\r\n            // Remove the event listener after it's been triggered\r\n\r\n            addToOrderBtn.removeEventListener(\"click\", handleAddToOrderClick);\r\n            while(rows.length > 0) {\r\n                rows.pop();\r\n            }\r\n            while(count_mods.length > 0){\r\n                count_mods.pop();\r\n            }\r\n            item.modifications = [{type: '+', changes: []}, {type: '-', changes: []}];\r\n\r\n        };\r\n\r\n        /**\r\n         * This button is used to handle when a button in cancelled and terminating the correct listeners,\r\n         * and adding new listeners when needed.\r\n         */\r\n        // Define the event handler function for \"Customize\" button\r\n        const handleCustomizeClick = function() {\r\n            for (let i = 0; i < item.custom.length + 1; i++) {\r\n                // if an ingredient is in custom, this will be made true.\r\n                // if an ingredient starts at 1 for a default then\r\n                // this will be made true\r\n                //\r\n                //let startAsDefault = false;\r\n\r\n                for(let j = 0; j < item.ingredients.length; j++) {\r\n\r\n                    if(item.custom[j] === item.ingredients[i])\r\n                    {\r\n                        count_mods[j] = 1;\r\n                        //startAsDefault = true;\r\n                        console.log(\"rows[j] = \" + item.ingredients[j])\r\n                        //startAsOneCheckers.push(true);\r\n                        startAsOneCheckers[j] = true;\r\n                        //item.modifications.find(mod => mod.type === '+').changes.push(item.ingredients[j]);\r\n                        //break;\r\n                    }\r\n\r\n                }\r\n                    //startAsOneCheckers.push(false);\r\n                    rows.push(item.custom[i]);\r\n                    //we start all modifications at zero, if .\r\n                    count_mods[i] = 0;\r\n                    startAsOneCheckers[i] = false;\r\n\r\n            }\r\n            count_mods.pop()\r\n            rows.pop()\r\n            startAsOneCheckers.pop()\r\n\r\n            console.log(count_mods)\r\n            console.log(startAsOneCheckers)\r\n\r\n            //startAsOneCheckers.pop()\r\n\r\n            document.body.removeChild(addPopup);\r\n            document.body.appendChild(customizePopup);\r\n            //this render component autogenerated the modifications div elements everytime the handle customize is clicked\r\n\r\n            ReactDOM.render(<MyComponent />, document.getElementById('my-component-container'));\r\n\r\n            //minimize these functions on the left :0 --> handlePlusMod, --> handleMinusMod\r\n            const handlePlusMod = (num) => {\r\n                //code is very convoluted, sorry in advance but im scared of touching anything because it could break :D\r\n                //message me if you need an explanation on the code!!!\r\n                //handleMinusMod is much easier to go through, I would recommend going through there if contacting me isn't time efficient\r\n\r\n                return function() {\r\n                    let toMod;\r\n                    toMod = rows[num]\r\n                    console.log(\"plus: \" + toMod);\r\n\r\n                    //i track count_mods[num] to make sure it goes from 0 - 2 range.\r\n                    if(count_mods[num] < 2 && count_mods[num]  >= 0) {\r\n                        count_mods[num] = count_mods[num] + 1;\r\n\r\n                        if(count_mods[num] > 2){\r\n                            count_mods[num] = 2;\r\n                            return;\r\n                        }\r\n                        //if we start at 1 (ie: a default ingredient), like pickles on a chicken sandwich\r\n                        //some of this code might not even be used tbh im scared to touch it tbh\r\n                        if(startAsOneCheckers[num] === true) {\r\n\r\n                            if (count_mods[num] === 1) {\r\n                                console.log(\"countnums (plus): \" + count_mods[num])\r\n                                console.log(\"rows (plus): \" + rows[num])\r\n\r\n                                //item.modifications.find(mod => mod.type === '-').changes.pop();\r\n                                let index = item.modifications.find(mod => mod.type === '-').changes.indexOf(rows[num])\r\n                                console.log(\"Index (plus): \" + index)\r\n                                if(index !== -1){\r\n                                    item.modifications.find(mod => mod.type === '-').changes.splice(index, 1);\r\n                                }\r\n                            }\r\n\r\n                            if (count_mods[num] === 2) {\r\n                                item.modifications.find(mod => mod.type === '+').changes.push(toMod);\r\n                            }\r\n\r\n                            if (count_mods[num] === 0) {\r\n                                item.modifications.find(mod => mod.type === '+').changes.push(toMod);\r\n                            }\r\n                        }\r\n                            //if we start at 0, ie: ingredients you can add on, but are not default on the item, like tomatoes on a chicken sandwich\r\n                        //ditto above statement D:\r\n\r\n                        else if(startAsOneCheckers[num] === false) {\r\n\r\n                            if (count_mods[num] === 1) {\r\n                                //item.modifications.find(mod => mod.type === '-').changes.pop();\r\n                                let index = item.modifications.find(mod => mod.type === '-').changes.indexOf(rows[num])\r\n                                if(index !== -1){\r\n                                    item.modifications.find(mod => mod.type === '-').changes.splice(index, 1);\r\n                                    console.log(\"test plus 1\");\r\n                                }\r\n                                item.modifications.find(mod => mod.type === '+').changes.push(toMod);\r\n\r\n                            }\r\n\r\n                            if (count_mods[num] === 2) {\r\n                                item.modifications.find(mod => mod.type === '+').changes.push(toMod);\r\n                            }\r\n\r\n                            if (count_mods[num] === 0) {\r\n                                item.modifications.find(mod => mod.type === '+').changes.push(toMod);\r\n                            }\r\n\r\n                            console.log(count_mods[num]);\r\n                        }\r\n\r\n                        ReactDOM.render(<MyComponent />, document.getElementById('my-component-container'));\r\n                        console.log(item.modifications.filter(mod => mod.type === '+'));\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n\r\n            const handleMinusMod = (num) => {\r\n                return function() {\r\n                    let toMod;\r\n                    toMod = rows[num]\r\n                    //same logic as plus, but flipped logic,\r\n                    // this code is much more concise and easier to read through if you're just trying to get a basic understanding\r\n                    // of my modification logic\r\n\r\n                    if(count_mods[num] <= 2 && count_mods[num]  >= 0) {\r\n                        count_mods[num] = count_mods[num] - 1;\r\n\r\n                        if(count_mods[num] < 0){\r\n                            count_mods[num] = 0;\r\n                            return;\r\n                        }\r\n\r\n                        if (item.modifications) {\r\n                            const plusMod = item.modifications.find(mod => mod.type === '+');\r\n\r\n                            if (plusMod) {\r\n                                //console.log(\"count_mod[num]: \" + count_mods[num]);\r\n                                console.log(\"rows[num]: \" + rows[num]);\r\n\r\n                                if(startAsOneCheckers[num] === true){\r\n                                    if(count_mods[num] === 0){\r\n                                        console.log(\"minus === 0\")\r\n                                        let index = item.modifications.find(mod => mod.type === '+').changes.indexOf(rows[num])\r\n                                        //item.modifications.find(mod => mod.type === '+').changes.pop();\r\n                                        console.log(\"Index (minus) :\" + index)\r\n                                        if(index !== -1){\r\n                                            console.log(\"index: \" + index)\r\n                                            item.modifications.find(mod => mod.type === '+').changes.splice(index, 1);\r\n                                        }\r\n                                        item.modifications.find(mod => mod.type === '-').changes.push(toMod);\r\n\r\n                                    }\r\n\r\n                                    if(count_mods[num] === 1) {\r\n                                        /*while( item.modifications.find(mod => mod.type === '+').changes.length > 0){\r\n                                            item.modifications.find(mod => mod.type === '+').changes.pop();\r\n                                        }*/\r\n                                        let index = item.modifications.find(mod => mod.type === '+').changes.indexOf(rows[num])\r\n\r\n                                        if(index !== -1){\r\n                                            item.modifications.find(mod => mod.type === '+').changes.splice(index, 1);\r\n                                        }\r\n                                    }\r\n\r\n                                    if(count_mods[num] === 2){\r\n                                        //item.modifications.find(mod => mod.type === '+').changes.pop();\r\n                                        let index = item.modifications.find(mod => mod.type === '+').changes.indexOf(rows[num])\r\n\r\n                                        if(index !== -1){\r\n                                            item.modifications.find(mod => mod.type === '+').changes.splice(index, 1);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                //console.log(\"start as checker test: \" + startAsOneCheckers[num])\r\n\r\n                                if (startAsOneCheckers[num] === false){\r\n                                    if(count_mods[num] === 0){\r\n                                        //console.log(\"test 0 case again..\")\r\n                                        let index = item.modifications.find(mod => mod.type === '+').changes.indexOf(rows[num])\r\n\r\n                                        if(index !== -1){\r\n                                            item.modifications.find(mod => mod.type === '+').changes.splice(index, 1);\r\n                                        }\r\n                                        //item.modifications.find(mod => mod.type === '+').changes.pop();\r\n\r\n                                        //item.modifications.find(mod => mod.type === '-').changes.push(toMod);\r\n                                    }\r\n\r\n                                    if(count_mods[num] === 1){\r\n                                        //console.log(\"test 1 case again..\")\r\n                                        //console.log(\"minus: \" + toMod);\r\n                                        let index = item.modifications.find(mod => mod.type === '+').changes.indexOf(rows[num])\r\n                                        if(index !== -1){\r\n                                            item.modifications.find(mod => mod.type === '+').changes.splice(index, 1);\r\n                                        }\r\n                                    }\r\n\r\n\r\n\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        ReactDOM.render(<MyComponent />, document.getElementById('my-component-container'));\r\n                    }\r\n\r\n                }\r\n            }\r\n            const displayCountModNumbers = document.getElementsByClassName(\"bg-blue-500 w-8 h-9 text-white px-2.5 py-2 mt-4 mr-1 rounded\");\r\n            const plusMods = document.getElementsByClassName(\"bg-green-500 text-white px-4 py-2 mt-4 mr-1 rounded\");\r\n            const minusMods = document.getElementsByClassName(\"bg-red-500 text-white px-4 py-2 mt-4 mr-1 rounded\");\r\n\r\n            for (let i = 0; i < plusMods.length; i++) {\r\n                plusMods[i].addEventListener(\"click\", handlePlusMod(i) );\r\n            }\r\n            for (let i = 0; i < displayCountModNumbers.length; i++) {\r\n                minusMods[i].addEventListener(\"click\", handleMinusMod(i) );\r\n            }\r\n\r\n            const saveCustomizeButton = document.getElementById(\"customizeItem\");\r\n            //Define the event handler function for \"Cancel\" button in customizePopup\r\n            const handleSaveCustomizeClick = function() {\r\n                document.body.removeChild(customizePopup);\r\n                document.body.appendChild(addPopup);\r\n\r\n\r\n                // Remove the event listener after it's been triggered\r\n                saveCustomizeButton.removeEventListener(\"click\", handleSaveCustomizeClick);\r\n                cancelCustomizeButton.removeEventListener(\"click\", handleCancelCustomizeClick);\r\n                //console.log(item.modifications.find(mod => mod.type === '+').toString());\r\n\r\n                //item.modifications = [{type: '+', changes: []}, {type: '-', changes: []}];\r\n\r\n\r\n                rows.length = 0;\r\n                count_mods.length = 0;\r\n\r\n            };\r\n\r\n            const cancelCustomizeButton = document.getElementById(\"cancelCustomizeBtn\");\r\n\r\n            const handleCancelCustomizeClick = function() {\r\n                document.body.removeChild(customizePopup);\r\n                document.body.appendChild(addPopup);\r\n\r\n                while(rows.length > 0) {\r\n                    rows.pop();\r\n                }\r\n                while(count_mods.length > 0){\r\n                    count_mods.pop();\r\n                    startAsOneCheckers.pop()\r\n                    console.log(\"poppin\")\r\n                }\r\n                // Remove the event listener after it's been triggered\r\n                cancelCustomizeButton.removeEventListener(\"click\", handleCancelCustomizeClick);\r\n                saveCustomizeButton.removeEventListener(\"click\", handleSaveCustomizeClick);\r\n            };\r\n\r\n            saveCustomizeButton.addEventListener(\"click\", handleSaveCustomizeClick);\r\n            cancelCustomizeButton.addEventListener(\"click\", handleCancelCustomizeClick);\r\n        };\r\n\r\n        // Attach event listeners to buttons\r\n        cancelItemButton.addEventListener(\"click\", handleCancelClick);\r\n        addToOrderBtn.addEventListener(\"click\", handleAddToOrderClick);\r\n        customizeBtn.addEventListener(\"click\", handleCustomizeClick);\r\n        //item.modifications = [{type: '+', changes: []}, {type: '-', changes: []}];\r\n\r\n\r\n\r\n\r\n    }\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}