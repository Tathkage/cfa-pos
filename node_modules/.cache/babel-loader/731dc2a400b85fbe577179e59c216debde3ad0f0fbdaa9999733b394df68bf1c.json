{"ast":null,"code":"import axios from \"axios\";\nimport { total } from '../totalProdsAndIngr';\n\n////////////////////////\n// Inventory Requests //\n////////////////////////\n\n/**\r\n * Accesses the inventory database and retrieves all the information from it\r\n *\r\n * @returns {Promise<AxiosResponse<any>>} All inventory data\r\n */\nexport function viewInventory() {\n  return axios.get('http://localhost:3000/api/inventory').then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while retrieving inventory data.');\n  });\n}\n\n/**\r\n * Updates the specific inventory item by adding the quantityAdd\r\n *\r\n * @param inventoryName The inventory item to be updated\r\n * @param quantityAdd The amount of quantity to add to the inventory item\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\nexport function restockInventory(inventoryName, quantityAdd) {\n  const data = {\n    inventoryName,\n    quantityAdd\n  }; // create an object with the input data\n\n  return axios.post('http://localhost:3000/api/restockInventory', data) // make a POST request to update the inventory data\n  .then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while restocking inventory data.');\n  });\n}\n\n/**\r\n * Adds a new inventory item to the database with the quantity\r\n *\r\n * @param name Name of the new inventory item\r\n * @param quantity The initial quantity of the new inventory item\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\nexport function addInventory(name, quantity) {\n  const data = {\n    name,\n    quantity\n  }; // create an object with the input data\n\n  return axios.post('http://localhost:3000/api/addInventory', data) // make a POST request to add a new item to the inventory data\n  .then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while adding a new item to the inventory data.');\n  });\n}\n\n/**\r\n * Removes the inventory item that matches the inventory item provided\r\n *\r\n * @param inventoryName The inventory item to be removed\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\nexport function removeInventory(inventoryName) {\n  const data = {\n    inventoryName\n  };\n  return axios.post('http://localhost:3000/api/removeInventory', data).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while removing inventory data.');\n  });\n}\n\n///////////////////\n// Menu Requests //\n///////////////////\n\n/**\r\n * Accesses the menu database and retrieves all the information from it\r\n *\r\n * @returns {Promise<AxiosResponse<any>>} All menu data\r\n */\nexport function viewMenu() {\n  // Send a GET request to the API endpoint to retrieve all inventory items\n  return axios.get('http://localhost:3000/api/menu').then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while retrieving menu data.');\n  });\n}\n\n/**\r\n * Updates the specific menu item with the price provided\r\n *\r\n * @param menuName The menu item to be updated\r\n * @param updatedPrice The new price of the specified menu item\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\nexport function updateMenu(menuName, updatedPrice) {\n  const data = {\n    menuName,\n    updatedPrice\n  }; // create an object with the input data\n\n  return axios.post('http://localhost:3000/api/updateMenu', data) // make a POST request to update the inventory data\n  .then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while updating menu data.');\n  });\n}\n\n/**\r\n * Adds a new menu item to the database with the price\r\n *\r\n * @param name Name of the new menu item\r\n * @param price The price of the menu item\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\nexport function addMenu(name, price, inventoryItems, modifyItems) {\n  const data = {\n    name,\n    price,\n    inventoryItems,\n    modifyItems\n  };\n  return axios.post('http://localhost:3000/api/addMenu', data).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while adding the new menu item.');\n  });\n}\n\n/**\r\n * Removes the menu item that matches the menu item provided\r\n *\r\n * @param name The menu item to be removed\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\nexport function removeMenu(name) {\n  const data = {\n    name\n  }; // create an object with the input data\n\n  return axios.post('http://localhost:3000/api/removeMenu', data) // make a POST request to remove the item from the menu\n  .then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while removing item from the menu.');\n  });\n}\nexport function seasonalMenu() {\n  return axios.get(`http://localhost:3000/api/seasonalMenu`).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while retrieving sales data.');\n  });\n}\n\n/////////////////////\n// Report Requests //\n/////////////////////\n\n/**\r\n * Retrieves all the data required for the sales report\r\n *\r\n * @param startDate The lower boundary of the sales report\r\n * @param endDate The upper boundary of the sales report\r\n * @returns {Promise<AxiosResponse<any>>} All of the sales report data\r\n */\nexport function salesReport(startDate, endDate) {\n  return axios.get(`http://localhost:3000/api/salesReport?startDate=${startDate}&endDate=${endDate}`).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while retrieving sales data.');\n  });\n}\n\n/**\r\n * Retrieves all the data for the x and z report\r\n *\r\n * @returns {Promise<AxiosResponse<any>>} The x and z report data\r\n */\nexport function viewXZ() {\n  return axios.get(`http://localhost:3000/api/viewXZ`).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while retrieving sales data.');\n  });\n}\n\n/**\r\n * Zeroes out the x report data and replaces the z report data with the previous x report data\r\n *\r\n * @param currentDate The date the z report was generated\r\n * @param currentTime The time the z report was generated\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\nexport function xzReport(currentDate, currentTime) {\n  const data = {\n    currentDate,\n    currentTime\n  };\n  return axios.post(`http://localhost:3000/api/xzReport`, data).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while retrieving xz data.');\n  });\n}\n\n/**\r\n * Retrieves all items from the inventory with a quantity less than 30\r\n *\r\n * @returns {Promise<AxiosResponse<any>>} Inventory items that have a quantity less than 30\r\n */\nexport function restockReport() {\n  return axios.get('http://localhost:3000/api/restockReport').then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while retrieving restock data.');\n  });\n}\n\n/**\r\n * Retrieves all the data for items that are commonly sold together\r\n *\r\n * @param startDate The lower boundary of the items commonly sold together\r\n * @param endDate The upper boundary of the items commonly sold together\r\n * @returns {Promise<AxiosResponse<any>>} The items commonly sold together data\r\n */\nexport function commonReport(startDate, endDate) {\n  return axios.get(`http://localhost:3000/api/commonReport?startDate=${startDate}&endDate=${endDate}`).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while retrieving commonly sold data.');\n  });\n}\nexport function excessReport(startDate) {\n  const endDate = new Date().toISOString().slice(0, 10);\n  const map = new Map();\n  const sortedMap = new Map();\n  return axios.get(`http://localhost:3000/api/excessReport?startDate=${startDate}&endDate=${endDate}`).then(function (response) {\n    const salesData = response.data.map(product => {\n      const matchedProduct = total.find(p => p.name === product.name);\n      if (matchedProduct) {\n        return axios.post(\"http://localhost:3000/api/arraysearchInventory\", {\n          names: matchedProduct.ingredients\n        }).then(function (response) {\n          const foundItems = response.data.names;\n          foundItems.forEach(name => {\n            if (map.has(name)) {\n              map.set(name, map.get(name) + 1);\n            } else {\n              map.set(name, 1);\n            }\n          });\n        }).catch(function (error) {\n          console.error(error);\n          alert(\"An error occurred while finding the item in the inventory data.\");\n        });\n      } else {\n        console.warn(`Product with name ${product.name} not found in 'total' array`);\n        return product;\n      }\n    });\n    return Promise.all(salesData).then(() => {\n      // console.log('map:', map);\n      return axios.post(\"http://localhost:3000/api/mapInventory\", {\n        map: Object.fromEntries(map)\n      }).then(function (response) {\n        const sumMap = new Map(Object.entries(response.data.inventory));\n        console.log('sumMap', sumMap);\n        for (const [key, value1] of map) {\n          if (sumMap.has(key)) {\n            const value2 = sumMap.get(key);\n            const ratio = value1 / value2;\n            if (ratio < 0.10) {\n              sortedMap.set(key, ratio);\n            }\n          }\n        }\n        console.log('sortedMap', sortedMap);\n        return sortedMap;\n      }).catch(function (error) {\n        console.error(error);\n        alert(\"An error occurred while finding the item in the inventory data.\");\n      });\n      // console.log(map);\n      // return map;\n    });\n  }).catch(function (error) {\n    console.error(error);\n    alert(\"An error occurred while retrieving sales data.\");\n  });\n}\n\n/////////////////////\n// Order Requests //\n/////////////////////\n\nexport function placeOrder(cart, cartPrice) {\n  const data = {\n    cart,\n    total_price: cartPrice\n  };\n  return axios.post('http://localhost:3000/api/placeOrder', data).then(function (response) {\n    return response.data;\n  }).catch(function (error) {\n    console.error(error);\n    alert('An error occurred while placing an order.');\n  });\n}","map":{"version":3,"names":["axios","total","viewInventory","get","then","response","data","catch","error","console","alert","restockInventory","inventoryName","quantityAdd","post","addInventory","name","quantity","removeInventory","viewMenu","updateMenu","menuName","updatedPrice","addMenu","price","inventoryItems","modifyItems","removeMenu","seasonalMenu","salesReport","startDate","endDate","viewXZ","xzReport","currentDate","currentTime","restockReport","commonReport","excessReport","Date","toISOString","slice","map","Map","sortedMap","salesData","product","matchedProduct","find","p","names","ingredients","foundItems","forEach","has","set","warn","Promise","all","Object","fromEntries","sumMap","entries","inventory","log","key","value1","value2","ratio","placeOrder","cart","cartPrice","total_price"],"sources":["C:/Programming/TAMU/CSCE 331/cfa-pos/src/employee_pages/managerLandingFunctions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { total } from '../totalProdsAndIngr';\r\n\r\n\r\n////////////////////////\r\n// Inventory Requests //\r\n////////////////////////\r\n\r\n/**\r\n * Accesses the inventory database and retrieves all the information from it\r\n *\r\n * @returns {Promise<AxiosResponse<any>>} All inventory data\r\n */\r\nexport function viewInventory() {\r\n    return axios.get('http://localhost:3000/api/inventory')\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while retrieving inventory data.');\r\n        });\r\n}\r\n\r\n/**\r\n * Updates the specific inventory item by adding the quantityAdd\r\n *\r\n * @param inventoryName The inventory item to be updated\r\n * @param quantityAdd The amount of quantity to add to the inventory item\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nexport function restockInventory(inventoryName, quantityAdd) {\r\n    const data = { inventoryName, quantityAdd }; // create an object with the input data\r\n\r\n    return axios.post('http://localhost:3000/api/restockInventory', data) // make a POST request to update the inventory data\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while restocking inventory data.');\r\n        });\r\n}\r\n\r\n/**\r\n * Adds a new inventory item to the database with the quantity\r\n *\r\n * @param name Name of the new inventory item\r\n * @param quantity The initial quantity of the new inventory item\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nexport function addInventory(name, quantity) {\r\n    const data = { name, quantity }; // create an object with the input data\r\n\r\n    return axios.post('http://localhost:3000/api/addInventory', data) // make a POST request to add a new item to the inventory data\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while adding a new item to the inventory data.');\r\n        });\r\n}\r\n\r\n/**\r\n * Removes the inventory item that matches the inventory item provided\r\n *\r\n * @param inventoryName The inventory item to be removed\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nexport function removeInventory(inventoryName) {\r\n    const data = { inventoryName };\r\n    return axios.post('http://localhost:3000/api/removeInventory', data)\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while removing inventory data.');\r\n        });\r\n}\r\n\r\n///////////////////\r\n// Menu Requests //\r\n///////////////////\r\n\r\n/**\r\n * Accesses the menu database and retrieves all the information from it\r\n *\r\n * @returns {Promise<AxiosResponse<any>>} All menu data\r\n */\r\nexport function viewMenu() {\r\n    // Send a GET request to the API endpoint to retrieve all inventory items\r\n    return axios.get('http://localhost:3000/api/menu')\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while retrieving menu data.');\r\n        });\r\n}\r\n\r\n/**\r\n * Updates the specific menu item with the price provided\r\n *\r\n * @param menuName The menu item to be updated\r\n * @param updatedPrice The new price of the specified menu item\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nexport function updateMenu(menuName, updatedPrice) {\r\n    const data = { menuName, updatedPrice }; // create an object with the input data\r\n\r\n    return axios.post('http://localhost:3000/api/updateMenu', data) // make a POST request to update the inventory data\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while updating menu data.');\r\n        });\r\n}\r\n\r\n/**\r\n * Adds a new menu item to the database with the price\r\n *\r\n * @param name Name of the new menu item\r\n * @param price The price of the menu item\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nexport function addMenu(name, price, inventoryItems, modifyItems) {\r\n    const data = { name, price, inventoryItems, modifyItems };\r\n\r\n    return axios.post('http://localhost:3000/api/addMenu', data)\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while adding the new menu item.');\r\n        });\r\n}\r\n\r\n/**\r\n * Removes the menu item that matches the menu item provided\r\n *\r\n * @param name The menu item to be removed\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nexport function removeMenu(name) {\r\n    const data = { name }; // create an object with the input data\r\n\r\n    return axios.post('http://localhost:3000/api/removeMenu', data) // make a POST request to remove the item from the menu\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while removing item from the menu.');\r\n        });\r\n}\r\n\r\nexport function seasonalMenu() {\r\n    return axios.get(`http://localhost:3000/api/seasonalMenu`)\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while retrieving sales data.');\r\n        });\r\n}\r\n\r\n\r\n/////////////////////\r\n// Report Requests //\r\n/////////////////////\r\n\r\n/**\r\n * Retrieves all the data required for the sales report\r\n *\r\n * @param startDate The lower boundary of the sales report\r\n * @param endDate The upper boundary of the sales report\r\n * @returns {Promise<AxiosResponse<any>>} All of the sales report data\r\n */\r\nexport function salesReport(startDate, endDate) {\r\n    return axios.get(`http://localhost:3000/api/salesReport?startDate=${startDate}&endDate=${endDate}`)\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while retrieving sales data.');\r\n        });\r\n}\r\n\r\n/**\r\n * Retrieves all the data for the x and z report\r\n *\r\n * @returns {Promise<AxiosResponse<any>>} The x and z report data\r\n */\r\nexport function viewXZ() {\r\n    return axios.get(`http://localhost:3000/api/viewXZ`)\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while retrieving sales data.');\r\n        });\r\n}\r\n\r\n/**\r\n * Zeroes out the x report data and replaces the z report data with the previous x report data\r\n *\r\n * @param currentDate The date the z report was generated\r\n * @param currentTime The time the z report was generated\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nexport function xzReport(currentDate, currentTime) {\r\n    const data = { currentDate, currentTime };\r\n\r\n    return axios.post(`http://localhost:3000/api/xzReport`, data)\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while retrieving xz data.');\r\n        });\r\n}\r\n\r\n/**\r\n * Retrieves all items from the inventory with a quantity less than 30\r\n *\r\n * @returns {Promise<AxiosResponse<any>>} Inventory items that have a quantity less than 30\r\n */\r\nexport function restockReport() {\r\n    return axios.get('http://localhost:3000/api/restockReport')\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while retrieving restock data.');\r\n        });\r\n}\r\n\r\n/**\r\n * Retrieves all the data for items that are commonly sold together\r\n *\r\n * @param startDate The lower boundary of the items commonly sold together\r\n * @param endDate The upper boundary of the items commonly sold together\r\n * @returns {Promise<AxiosResponse<any>>} The items commonly sold together data\r\n */\r\nexport function commonReport(startDate, endDate) {\r\n    return axios.get(`http://localhost:3000/api/commonReport?startDate=${startDate}&endDate=${endDate}`)\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while retrieving commonly sold data.');\r\n        });\r\n}\r\n\r\nexport function excessReport(startDate) {\r\n    const endDate = new Date().toISOString().slice(0, 10);\r\n    const map = new Map();\r\n    const sortedMap = new Map();\r\n\r\n    return axios\r\n        .get(\r\n            `http://localhost:3000/api/excessReport?startDate=${startDate}&endDate=${endDate}`\r\n        )\r\n        .then(function (response) {\r\n            const salesData = response.data.map((product) => {\r\n                const matchedProduct = total.find((p) => p.name === product.name);\r\n                if (matchedProduct) {\r\n                    return axios\r\n                        .post(\"http://localhost:3000/api/arraysearchInventory\", {\r\n                            names: matchedProduct.ingredients,\r\n                        })\r\n                        .then(function (response) {\r\n                            const foundItems = response.data.names;\r\n                            foundItems.forEach((name) => {\r\n                                if (map.has(name)) {\r\n                                    map.set(name, map.get(name) + 1);\r\n                                } else {\r\n                                    map.set(name, 1);\r\n                                }\r\n                            });\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.error(error);\r\n                            alert(\r\n                                \"An error occurred while finding the item in the inventory data.\"\r\n                            );\r\n                        });\r\n                } else {\r\n                    console.warn(\r\n                        `Product with name ${product.name} not found in 'total' array`\r\n                    );\r\n                    return product;\r\n                }\r\n            });\r\n            return Promise.all(salesData).then(() => {\r\n                // console.log('map:', map);\r\n                return axios\r\n                    .post(\"http://localhost:3000/api/mapInventory\", { map: Object.fromEntries(map) })\r\n                    .then(function (response) {\r\n                        const sumMap = new Map(Object.entries(response.data.inventory));\r\n                        console.log('sumMap', sumMap);\r\n                        for (const [key, value1] of map) {\r\n                            if (sumMap.has(key)) {\r\n                                const value2 = sumMap.get(key);\r\n                                const ratio = value1 / value2;\r\n                                if (ratio < 0.10) {\r\n                                    sortedMap.set(key, ratio);\r\n                                }\r\n                            }\r\n                        }\r\n                        console.log('sortedMap', sortedMap);\r\n                        return sortedMap;\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.error(error);\r\n                        alert(\"An error occurred while finding the item in the inventory data.\");\r\n                    });\r\n                // console.log(map);\r\n                // return map;\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n            console.error(error);\r\n            alert(\"An error occurred while retrieving sales data.\");\r\n        });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/////////////////////\r\n// Order Requests //\r\n/////////////////////\r\n\r\nexport function placeOrder(cart, cartPrice) {\r\n    const data = {cart, total_price: cartPrice};\r\n\r\n    return axios.post('http://localhost:3000/api/placeOrder',data)\r\n        .then(function(response) {\r\n            return response.data;\r\n        })\r\n        .catch(function(error) {\r\n            console.error(error);\r\n            alert('An error occurred while placing an order.');\r\n        });\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}