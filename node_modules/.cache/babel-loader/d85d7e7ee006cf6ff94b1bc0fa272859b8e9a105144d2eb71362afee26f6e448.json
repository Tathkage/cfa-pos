{"ast":null,"code":"/**\r\n * Creates the initial popup with a header and a close button.\r\n * The header differs based on what the popup is.\r\n *\r\n * @param headerText The header of the popup. The text that is displayed.\r\n * @param onCloseClick Function passed into the closed button. When the closed button is pressed the popup is removed, the dimming affect is removed, and all the buttons are enabled\r\n * @returns {HTMLDivElement} Popup is returned for other functions to reference\r\n */\nexport function createPopup(headerText, onCloseClick) {\n  const popup = document.createElement(\"div\");\n  popup.className = \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white p-8 rounded-md z-50\";\n  const header = document.createElement(\"h2\");\n  header.innerHTML = headerText;\n  header.className = \"mb-4 font-bold text-lg\";\n  popup.appendChild(header);\n  const closeButton = document.createElement(\"img\");\n  closeButton.src = \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Grey_close_x.svg/1024px-Grey_close_x.svg.png\";\n  closeButton.alt = \"Close\";\n  closeButton.classList.add(\"cursor-pointer\", \"absolute\", \"top-0\", \"right-0\", \"mt-4\", \"mr-4\", \"h-5\");\n  closeButton.addEventListener(\"click\", onCloseClick);\n  popup.appendChild(closeButton);\n  return popup;\n}\n\n/**\r\n * Enables all the buttons present on the screen\r\n */\nexport function enableButtons() {\n  const buttons = document.getElementsByTagName(\"button\");\n  for (let i = 0; i < buttons.length; i++) {\n    buttons[i].disabled = false;\n  }\n}\n\n/**\r\n * Disables all the buttons present on the screen\r\n */\nexport function disableButtons() {\n  const buttons = document.getElementsByTagName(\"button\");\n  for (let i = 0; i < buttons.length; i++) {\n    buttons[i].disabled = true;\n  }\n}","map":{"version":3,"names":["createPopup","headerText","onCloseClick","popup","document","createElement","className","header","innerHTML","appendChild","closeButton","src","alt","classList","add","addEventListener","enableButtons","buttons","getElementsByTagName","i","length","disabled","disableButtons"],"sources":["C:/Programming/TAMU/CSCE 331/cfa-pos/src/customer_pages/popups/buttonToggle.js"],"sourcesContent":["/**\r\n * Creates the initial popup with a header and a close button.\r\n * The header differs based on what the popup is.\r\n *\r\n * @param headerText The header of the popup. The text that is displayed.\r\n * @param onCloseClick Function passed into the closed button. When the closed button is pressed the popup is removed, the dimming affect is removed, and all the buttons are enabled\r\n * @returns {HTMLDivElement} Popup is returned for other functions to reference\r\n */\r\nexport function createPopup(headerText, onCloseClick) {\r\n    const popup = document.createElement(\"div\");\r\n    popup.className = \"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white p-8 rounded-md z-50\";\r\n\r\n    const header = document.createElement(\"h2\");\r\n    header.innerHTML = headerText;\r\n    header.className = \"mb-4 font-bold text-lg\";\r\n    popup.appendChild(header);\r\n\r\n    const closeButton = document.createElement(\"img\");\r\n    closeButton.src = \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Grey_close_x.svg/1024px-Grey_close_x.svg.png\";\r\n    closeButton.alt = \"Close\";\r\n    closeButton.classList.add(\"cursor-pointer\", \"absolute\", \"top-0\", \"right-0\", \"mt-4\", \"mr-4\", \"h-5\");\r\n    closeButton.addEventListener(\"click\", onCloseClick);\r\n    popup.appendChild(closeButton);\r\n\r\n    return popup;\r\n}\r\n\r\n/**\r\n * Enables all the buttons present on the screen\r\n */\r\nexport function enableButtons() {\r\n    const buttons = document.getElementsByTagName(\"button\");\r\n    for (let i = 0; i < buttons.length; i++) {\r\n        buttons[i].disabled = false;\r\n    }\r\n}\r\n\r\n/**\r\n * Disables all the buttons present on the screen\r\n */\r\nexport function disableButtons() {\r\n    const buttons = document.getElementsByTagName(\"button\");\r\n    for (let i = 0; i < buttons.length; i++) {\r\n        buttons[i].disabled = true;\r\n    }\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,WAAWA,CAACC,UAAU,EAAEC,YAAY,EAAE;EAClD,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC3CF,KAAK,CAACG,SAAS,GAAG,iGAAiG;EAEnH,MAAMC,MAAM,GAAGH,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;EAC3CE,MAAM,CAACC,SAAS,GAAGP,UAAU;EAC7BM,MAAM,CAACD,SAAS,GAAG,wBAAwB;EAC3CH,KAAK,CAACM,WAAW,CAACF,MAAM,CAAC;EAEzB,MAAMG,WAAW,GAAGN,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EACjDK,WAAW,CAACC,GAAG,GAAG,wGAAwG;EAC1HD,WAAW,CAACE,GAAG,GAAG,OAAO;EACzBF,WAAW,CAACG,SAAS,CAACC,GAAG,CAAC,gBAAgB,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC;EAClGJ,WAAW,CAACK,gBAAgB,CAAC,OAAO,EAAEb,YAAY,CAAC;EACnDC,KAAK,CAACM,WAAW,CAACC,WAAW,CAAC;EAE9B,OAAOP,KAAK;AAChB;;AAEA;AACA;AACA;AACA,OAAO,SAASa,aAAaA,CAAA,EAAG;EAC5B,MAAMC,OAAO,GAAGb,QAAQ,CAACc,oBAAoB,CAAC,QAAQ,CAAC;EACvD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACrCF,OAAO,CAACE,CAAC,CAAC,CAACE,QAAQ,GAAG,KAAK;EAC/B;AACJ;;AAEA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC7B,MAAML,OAAO,GAAGb,QAAQ,CAACc,oBAAoB,CAAC,QAAQ,CAAC;EACvD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACrCF,OAAO,CAACE,CAAC,CAAC,CAACE,QAAQ,GAAG,IAAI;EAC9B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}