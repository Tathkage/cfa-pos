var A = Object.defineProperty;
var C = (o, t, i) => t in o ? A(o, t, { enumerable: !0, configurable: !0, writable: !0, value: i }) : o[t] = i;
var w = (o, t, i) => (C(o, typeof t != "symbol" ? t + "" : t, i), i);
const m = (o) => {
  var i;
  return (i = o == null ? void 0 : o.clientId) != null ? i : o == null ? void 0 : o.client_id;
};
class _ {
  constructor({
    clientId: t,
    onScriptLoadError: i,
    onScriptLoadSuccess: n
  }) {
    w(this, "clientId");
    w(this, "scriptLoadedSuccessfully", !1);
    w(this, "containerHeightMap", { large: "40", medium: "32", small: "20" });
    this.clientId = t, !(typeof window > "u") && this.useLoadGsiScript({ onScriptLoadError: i, onScriptLoadSuccess: n });
  }
  useLoadGsiScript({
    onScriptLoadSuccess: t,
    onScriptLoadError: i
  } = {}) {
    const n = document.createElement("script");
    n.src = "https://accounts.google.com/gsi/client", n.async = !0, n.defer = !0, n.onload = () => {
      this.scriptLoadedSuccessfully = !0, t && t();
    }, n.onerror = () => {
      this.scriptLoadedSuccessfully = !1, i && i();
    }, document.body.appendChild(n);
  }
  useGoogleLogin(t) {
    return (i) => this.useGoogleLoginPostponed(t)(i);
  }
  useGoogleLoginPostponed({
    flow: t = "implicit",
    scope: i = "",
    onSuccess: n,
    onError: u,
    onNonOAuthError: d,
    overrideScope: r,
    ...l
  }) {
    var f;
    if (!this.scriptLoadedSuccessfully)
      return () => {
      };
    const e = t === "implicit" ? "initTokenClient" : "initCodeClient", g = (f = window.google) == null ? void 0 : f.accounts.oauth2[e]({
      client_id: this.clientId,
      scope: r ? i : `openid profile email ${i}`,
      callback: (c) => {
        if (u && c.error)
          return u(c);
        n && n(c);
      },
      error_callback: (c) => {
        d && d(c);
      },
      ...l
    });
    return t === "implicit" ? (c) => g.requestAccessToken(c) : () => g.requestCode();
  }
  useGoogleOneTapLogin(t) {
    return () => {
      this.useGoogleOneTapLoginPostponed(t);
    };
  }
  useGoogleOneTapLoginPostponed({
    onError: t,
    onSuccess: i,
    hosted_domain: n,
    cancel_on_tap_outside: u,
    promptMomentNotification: d
  }) {
    var r, l;
    typeof window > "u" || !this.scriptLoadedSuccessfully || ((r = window.google) == null || r.accounts.id.initialize({
      hosted_domain: n,
      cancel_on_tap_outside: u,
      client_id: this.clientId,
      callback: (e) => {
        if (!(e != null && e.credential) && t)
          return t();
        const { credential: g, select_by: s } = e;
        i({
          select_by: s,
          credential: g,
          clientId: m(e)
        });
      }
    }), (l = window.google) == null || l.accounts.id.prompt(d));
  }
  useRenderButton(t) {
    return () => {
      this.useRenderButtonPostponed(t);
    };
  }
  useRenderButtonPostponed({
    onSuccess: t,
    onError: i,
    useOneTap: n,
    promptMomentNotification: u,
    type: d = "standard",
    theme: r = "outline",
    size: l = "large",
    text: e,
    shape: g,
    element: s,
    logo_alignment: h,
    width: f,
    locale: c,
    click_listener: I,
    ...L
  }) {
    var p, y, G;
    !this.scriptLoadedSuccessfully || ((p = window.google) == null || p.accounts.id.initialize({
      client_id: this.clientId,
      callback: (a) => {
        if (!(a != null && a.credential) && i)
          return i();
        const { credential: S, select_by: b } = a;
        t({
          select_by: b,
          credential: S,
          clientId: m(a)
        });
      },
      ...L
    }), s.style.height = this.containerHeightMap[l], (y = window.google) == null || y.accounts.id.renderButton(s, {
      type: d,
      size: l,
      text: e,
      theme: r,
      shape: g,
      width: f,
      locale: c,
      logo_alignment: h,
      click_listener: I
    }), n && ((G = window.google) == null || G.accounts.id.prompt(u)));
  }
}
function k() {
  var o;
  typeof window > "u" || (o = window.google) == null || o.accounts.id.disableAutoSelect();
}
function T(o, t, ...i) {
  return window.google ? window.google.accounts.oauth2.hasGrantedAnyScope(
    o,
    t,
    ...i
  ) : !1;
}
function B(o, t, ...i) {
  return window.google ? window.google.accounts.oauth2.hasGrantedAllScopes(
    o,
    t,
    ...i
  ) : !1;
}
export {
  _ as GoogleOAuthProvider,
  k as googleLogout,
  B as hasGrantedAllScopesGoogle,
  T as hasGrantedAnyScopeGoogle
};
